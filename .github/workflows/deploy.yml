name: build_push_deploy
run-name: build_push_deploy_${{ github.ref_name }}

on:
  push:
    branches:
      - main
      - staging

jobs:


  build-push:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3.6.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GH_PAT }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}/node-app-${{ github.ref_name }}
        tags: |
          type=sha,format=long
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.ref_name ) }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: deployment/docker/k3s/app.Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}


  deploy:
    needs: [build-push]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Create kube config
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config
      - name: Install helm
        run: |
          curl -LO https://get.helm.sh/helm-v3.8.0-linux-amd64.tar.gz
          tar -zxvf helm-v3.8.0-linux-amd64.tar.gz
          mv linux-amd64/helm /usr/local/bin/helm
          helm version
      - name: Lint helm chart
        run: helm lint ./deployment/helm -f ./deployment/helm/${{ github.ref_name }}.yaml
      - name: Deploy
        run: |
          if [ ${{ github.ref_name }} != "main" ]; then export DEPLOY_BRANCH_NAME="-${{ github.ref_name }}"; else export DEPLOY_BRANCH_NAME=""; fi
          helm upgrade --install --atomic --timeout 3m work-tracker ./deployment/helm --debug --set image.tag=sha-${GITHUB_SHA} --namespace work-tracker$DEPLOY_BRANCH_NAME --create-namespace -f ./deployment/helm/${{ github.ref_name }}.yaml